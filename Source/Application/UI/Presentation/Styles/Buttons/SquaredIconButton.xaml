<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.Buttons.xaml" />
        <ResourceDictionary Source="../ColorDictionary.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <system:Double x:Key="SquaredButtonSize">33</system:Double>

    <Style x:Key="SquaredIconButton" BasedOn="{StaticResource MahApps.Styles.Button.Square}" TargetType="{x:Type ButtonBase}" x:Shared="False">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Width" Value="{StaticResource SquaredButtonSize}" />
        <Setter Property="Height" Value="{StaticResource SquaredButtonSize}" />
        <Setter Property="controls:ControlsHelper.ContentCharacterCasing" Value="Normal" />
        <Setter Property="Foreground" Value="{StaticResource SquaredIconButtonForegroundBrush}" />
        <Setter Property="Background" Value="{StaticResource SquaredIconButtonBackgroundBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Border.CornerRadius" Value="2" />
        <Setter Property="SnapsToDevicePixels" Value="true" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        CornerRadius="{TemplateBinding Border.CornerRadius}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}">

                        <ContentPresenter  IsHitTestVisible="false"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center"
                                           Margin="{TemplateBinding Padding}"
                                           Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource SquaredIconButtonMouseOverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource SquaredIconButtonDisabledBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"
                         Value="false">
                <Setter Property="Foreground" Value="{StaticResource ListBoxSquaredIconButtonUnselectedForegroundBrush}" />
                <Setter Property="Background" Value="{StaticResource ListBoxSquaredIconButtonUnselectedBackgroundBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
                         Value="false">
                <Setter Property="Foreground" Value="{StaticResource ListBoxSquaredIconButtonUnselectedForegroundBrush}" />
                <Setter Property="Background" Value="{StaticResource ListBoxSquaredIconButtonUnselectedBackgroundBrush}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGridRow}}"
                         Value="false">
                <Setter Property="Foreground" Value="{StaticResource ListBoxSquaredIconButtonUnselectedForegroundBrush}" />
                <Setter Property="Background" Value="{StaticResource ListBoxSquaredIconButtonUnselectedBackgroundBrush}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <!-- A nearly identical (excluding the colors) style to the SquaredIconButton was introduced for the feedback button -->
    <!-- TODO: Refactor this duplicate style with a DependencyProperty for the colors that are needed for the mouse over events -->
    <Style x:Key="YellowSquaredIconButton" BasedOn="{StaticResource SquaredIconButton}" TargetType="ButtonBase">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{StaticResource YellowSquaredIconButtonBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border
                        CornerRadius="{TemplateBinding Border.CornerRadius}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}">

                        <ContentPresenter  IsHitTestVisible="false"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center"
                                           Margin="{TemplateBinding Padding}"
                                           Content="{TemplateBinding Content}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource YellowSquaredIconButtonMouseOverBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource SquaredIconButtonDisabledBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
